#! /bin/sh -e
#
#   setup_beancounter --- Example usage of the beancounter tool
#  
#   Copyright (C) 2000  Dirk Eddelbuettel <edd@debian.org>
#  
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#  
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#  
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

#   $Id: setup_beancounter,v 1.7 2001/04/19 03:40:10 edd Exp edd $

# If we really want to be independent of the underlying database, this 
# probably needs to written in Perl using DBI/DBD
#
# For now it is PostgreSQL specific

# -------------------------- 'global' variables

# psql(1) arguments -- you could add host, port, user, ... here
PSQL="psql -q -d beancounter"

# Dow Jones Industrial Average 
# see for example http://www.amex.com/indexshares/index_shares_diamonds_list.stm
DJIA="AA AXP T BA CAT C KO DIS DD EK XOM GE GM HWP HD HON INTC IBM IP JNJ MCD MRK MSFT MMM JPM MO PG SBC UTX WMT"

# S&P500 is at http://www.spglobal.com/ssindexmain500text.html
# NASDAQ is at http://www.nasdaq.com/asp/nasdaq100_activity.stm
# S&P/TSE60 is at http://www.spglobal.com/ssindexmaintsealpha.html
# (NB that Canadian stocks need a .TO suffix, eg Air Canada becomes AC.TO)

# --------------------------- shell functions below --------------------------
function execute()
{
    echo -n "** Running:     "
    echo "$1"
    eval "$1"
    echo
}


function create_tables()
{
    echo | $PSQL <<EOF 

	create table stockinfo (
	    symbol   		varchar(12) not null,
	    name     		varchar(64) not null,
	    exchange 		varchar(16) not null,
	    capitalisation  	float4,
	    low_52weeks		float4,
	    high_52weeks	float4,
	    earnings		float4,
	    dividend		float4,
	    p_e_ratio		float4,
	    avg_volume		int4
	);
	create unique index stockinfo_pkey
	    on stockinfo (symbol);

	create table stockprices (
	    symbol   		varchar(12) not null,
	    date		date,
	    previous_close	float4,
	    day_open		float4,
	    day_low		float4,
	    day_high		float4,
	    day_close		float4,
	    change		float4,
	    bid			float4,
	    ask			float4,
	    volume		int4
	);
	create unique index stockprices_pkey
	    on stockprices (symbol, date);

	create table fxprices (
	    currency   		varchar(12) not null,
	    date		date,
	    previous_close	float4,
	    day_open		float4,
	    day_low		float4,
	    day_high		float4,
	    day_close		float4,
	    change		float4
	);
	create unique index fxprices_pkey
	    on fxprices (currency, date);

	create table portfolio (
	    symbol   		varchar(16) not null,
	    shares		float4,
	    currency		varchar(12),
	    type		varchar(16),
	    owner		varchar(16),
	    cost		float(4),
	    date		date
	    
	);
	create unique index portfolio_pkey
	    on portfolio (symbol, owner, date);

	create table indices (
	    symbol   		varchar(12) not null,
	    index		varchar(12) not null
	);
	\q
EOF
}

function exit_if_exists()
{
    set +e
    result=`psql template1 -l | grep beancounter`
    set -e
    if [ "$result" != "" ]
    then
	echo ""
	echo "*** Error: Database exists ***"
	echo ""
	echo "The beancounter database already exists"
	echo "This script is not needed to setup the database."
	echo "You might still want to look at its source to write"
	echo "your own script for populating the beancounter database."
	echo ""
	exit 1
    fi
}

function exit_if_root()
{
    if [ "$1" == "root" ]
    then
	echo ""
	echo "*** Error: Root usage ***"
	echo ""
	echo "We do not recommend that you run this script as root"
	echo "Please re-run it as a normal user to setup BeanCounter."
	echo "If you insist, then please uncomment this test first."
	echo ""
	exit 1
#    else
#	echo "Good: We are not running as root"
    fi
}

function exit_if_no_postgres_user()
{
    set +e
    ( psql template1 -q -c "select * from pg_user;" | grep -v $1 ) >/dev/null 2>&1 
    if [ $? -eq 1 ]
    then
	echo ""
	echo "*** Error: No postgresql user '$1'"
	echo ""
	echo "We were unable to start psql as the user '$1' does not exist"
	echo "You need to create a Postgresql user '$1' first:"
	echo ""
	echo "    Change to user postgres:		$ su - postgres"
	echo "    Create the user:       		# createuser $1 -d"
	echo "    Exit from user postgres:		# exit"
	echo ""
	echo "and then run this script again."
	echo ""
	exit 1
#    else
#	echo "Good: Postgresql can be accessed by $1"
    fi
    set -e
}


# ------------------------ 'main' code -------------------------------------

if [ "$USER" == "" ]
then
    USER=$(whoami)
fi

# test if we are running this as root
exit_if_root $USER

# test if psql can be run by current user
exit_if_no_postgres_user $USER

# test if beancounter exists and exit if that's the case 
exit_if_exists

echo "Creating BeanCounter database"
execute "createdb beancounter"

echo "Creating BeanCounter database tables"
create_tables 

# insert the DJIA stocks into the indices table
echo "Filling BeanCounter database tables with DJIA stocks"
execute "beancounter addindex DJIA $DJIA"

# create an example of Dow stocks
echo "Filling BeanCounter (sample) portfolio"
execute "beancounter addportfolio CSCO:20:USD NT:20:USD"

echo -n "Filling BeanCounter with stock info and most recent prices "
echo "for DJIA stocks"
execute "beancounter addstock $DJIA"

echo "Filling BeanCounter with historical prices for DJIA stocks"
execute "beancounter backpopulate --prevdate '1 year ago' --date 'friday 1 week ago' CSCO NT"

echo "Running portfolio pl report on (sample) portfolio"
execute "beancounter plreport"

echo "Running portfolio dayendreport on (sample) portfolio"
execute "beancounter dayendreport"

echo "Done."
exit 0

